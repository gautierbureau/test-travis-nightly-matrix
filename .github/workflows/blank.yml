name: CI

on: [push]

jobs:
  # build:
  #      runs-on: ubuntu-latest
  #      env:
  #        DYNAWO_BUILD_TYPE: Release
  #        DYNAWO_CXX11_ENABLED: YES
  #        DYNAWO_COMPILER: GCC
  #        DYNAWO_LIBRARY_TYPE: SHARED
  #        DYNAWO_RESULTS_SHOW: "false"
  #      steps:
  #        - name: Git clone
  #          run: git clone https://github.com/dynawo/dynawo.git
  #        - name: Install packages
  #          run: sudo apt-get update && sudo apt-get install -y git gcc g++ gfortran autoconf pkgconf automake make libtool cmake hwloc openjdk-8-jdk libblas-dev liblpsolve55-dev libarchive-dev doxygen doxygen-latex liblapack-dev libexpat1-dev libsqlite3-dev zlib1g-dev gettext patch clang python-pip libncurses5-dev libreadline-dev libdigest-perl-md5-perl unzip gcovr lcov libboost-all-dev qt4-qmake qt4-dev-tools lsb-release libxml2-utils python-lxml python-psutil wget libcurl4-openssl-dev rsync bash-completion
  #        - name: Build Dynawo
  #          run: |
  #            cd dynawo
  #            export DYNAWO_INSTALL_OPENMODELICA=$(pwd)/OpenModelica/Install
  #            export DYNAWO_SRC_OPENMODELICA=$(pwd)/OpenModelica/Source
  #            export DYNAWO_HOME=$(pwd)
  #            util/envDynawo.sh build-user
        
  # build-docker:
  #   runs-on: ubuntu-latest
  #   container: dynawo/dynawo-travis:latest
  #   env:
  #     DYNAWO_BUILD_TYPE: Release
  #     DYNAWO_CXX11_ENABLED: YES
  #     DYNAWO_COMPILER: GCC
  #     DYNAWO_LIBRARY_TYPE: SHARED
  #     DYNAWO_RESULTS_SHOW: "false"
  #   steps:
  #     # - name: Git clone
  #     #   run: git clone https://github.com/dynawo/dynawo.git
  #     - name: echo
  #       run: |
  #         pwd
  #         id
  #         cd /home/dynawo_travis
  #         pwd
  #         git clone https://github.com/dynawo/dynawo.git
  #         cd dynawo
  #         export DYNAWO_INSTALL_OPENMODELICA=/opt/OpenModelica/Install
  #         export DYNAWO_SRC_OPENMODELICA=$(pwd)/OpenModelica/Source
  #         export DYNAWO_HOME=$(pwd)
  #         util/envDynawo.sh build-user
  build-macos:
    runs-on: macos-latest
    env:
      DYNAWO_BUILD_TYPE: Release
      DYNAWO_CXX11_ENABLED: YES 
      DYNAWO_COMPILER: CLANG 
      DYNAWO_LIBRARY_TYPE: SHARED
      DYNAWO_RESULTS_SHOW: "false"
    steps:    
      - name: Git clone
        run: git clone https://github.com/dynawo/dynawo.git
      - name: Build
        run: |
          curl -L -X GET https://api.github.com/repos/dynawo/dynawo/releases/latest
          curl -L $(curl -s -L -X GET https://api.github.com/repos/dynawo/dynawo/releases/latest | grep "Dynawo_MacOS" | grep url | cut -d '"' -f 4) -o Dynawo_MacOS_latest.zip
          unzip Dynawo_MacOS_latest.zip -d Dynawo_MacOS_latest > /dev/null
          cd dynawo
          mkdir OpenModelica
          mv ../Dynawo_MacOS_latest/OpenModelica OpenModelica/Install
          export DYNAWO_INSTALL_OPENMODELICA=$(pwd)/OpenModelica
          export DYNAWO_SRC_OPENMODELICA=$(pwd)/OpenModelica/Source
          export DYNAWO_HOME=$(pwd)
          export MACOSX_DEPLOYMENT_TARGET=10.13
          util/envDynawo.sh build-user
  build-windows:
    runs-on: windows-latest
    env:
      DYNAWO_BUILD_TYPE: Release
      DYNAWO_CXX11_ENABLED: YES 
      DYNAWO_LIBRARY_TYPE: SHARED
    steps:    
      - name: Git clone
        run: git clone https://github.com/dynawo/dynawo.git
      - name: Build
        shell: cmd
        run: |
          cd dynawo
          "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          cl
          cmake --version
          echo %BOOST_ROOT_1_69_0%